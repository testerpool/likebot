const db = require('../../modules/db/MongoConnect');
const user = require("../../modules/db/ProfileConnect"); // –ü—Ä–æ—Ñ–∏–ª–∏ –∏–≥—Ä–æ–∫–æ–≤/–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!
const data = require('../../config/data.json');
const utils = require('../utils');

module.exports = {
    /**
     * –ü—É–±–ª–∏–∫—É–µ—Ç –ø–æ—Å—Ç
     * @param {*} group 
     * @returns 
     */
    poster: async function(group) {
        let group_id = data[group].group_id,
            page = utils.getVk(group, 'page_token');

        let better_id = await this.getBestInBalls(group);

        let photo = await utils.getPhotoWithVkid(better_id, group);
        let target = await user(data[group].dataBase, better_id);
        target.balance = 0;

        let post_id = await page.api.wall.post({
            owner_id: -group_id,
            message: this.generateMessage(),
            attachments: photo,
        }).then(function(a) {
            return a.post_id;
        });
        return this.sendMessageAboutSuccessPublishPost(better_id, post_id, group);
    },
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–° –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞
     * @param {*} user_id 
     * @param {*} post_id 
     * @param {*} group 
     * @returns 
     */
    sendMessageAboutSuccessPublishPost: function(user_id, post_id, group) {
        const vk = utils.getVk(group),
            group_id = data[group].group_id;
        let smsg = '';

        smsg += '–ü—Ä–∏–≤–µ—Ç–∏–∫ ‚ò∫ \n –†–∞–¥ —Å–æ–æ–±—â–∏—Ç—å —á—Ç–æ –º—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ç–µ–±—è –≤ Like Time –∏ —Ç—ã —É–∂–µ –Ω–∞ —Å—Ç–µ–Ω–æ—á–∫–µ ‚ù§ \n\n';
        smsg += `–°—Å—ã–ª–æ—á–∫–∞ –Ω–∞ –ø–æ—Å—Ç: \n vk.com/wall-${group_id}_${post_id}`
        return vk.api.messages.send({
            user_id: user_id,
            random_id: 0,
            message: smsg
        });
    },
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–∞–º–æ–≥–æ —Ç–æ–ø–æ–≤–æ–≥–æ –ø–æ –±–∞–ª–ª–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {*} group 
     * @param {*} count 
     * @returns string - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    getBestInBalls: async function(group, count = 5) {
        const vk = utils.getVk(group);
        let people = await db().collection(data[group].dataBase).find({}).sort({ balance: -1 }).limit(count).toArray();

        let peopleWithOpenPages = [];
        for (let man of people) {
            let [IUser] = await vk.api.users.get({ user_ids: man.vk });
            if (IUser.is_closed == true) {
                this.sendMessageAboutClosedPage(IUser.id, group);
            }
            if (IUser.is_closed == false) {
                peopleWithOpenPages.push(IUser.id);
            }
        }

        return peopleWithOpenPages[0];
    },
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     * @param {*} user_id 
     * @param {*} group 
     * @param {*} message 
     * @returns 
     */
    sendMessageAboutClosedPage: function(user_id, group, message = '–£ –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –õ–¢, –Ω–æ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Çüò¨ \n –ö–∞–∫ –∂–µ –ª—é–¥–∏ –±—É–¥—É—Ç —Å—Ç–∞–≤–∏—Ç—å –í–∞–º –ª–∞–π–∫–∏? \n\n –û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ) üíû') {
        const vk = utils.getVk(group);
        try {
            vk.api.messages.send({ user_id: user_id, message: message, random_id: 0 });
            return true;
        } catch (error) {
            return error;
        }
    },
    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞
     * @returns string
     */
    generateMessage: function() {
        return '+9O üíô –∏ –ª–µ—Ç–∏–º –¥–∞–ª—å—à–µ üå†';
        // –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    },
};