const request = require('request');

const db = require("../db/MongoConnect"); // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–ê–ó–ï –î–ê–ù–ù–´–•!
const user = require("../db/ProfileConnect"); // –ü—Ä–æ—Ñ–∏–ª–∏ –∏–≥—Ä–æ–∫–æ–≤/–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!
const utils = require("../utils");
const data = require("../../config/data.json");
const groups = [165367966, 164711863, 189152994]

/*-------------------------------------------------------------------*/
/*     |                       
/*     |                      –§—É–Ω–∫—Ü–∏–∏      
/*     V                        
/*-------------------------------------------------------------------*/
module.exports = {
    checkDonate: function(group) {
        const key = data[group].donate_app_token,
            COLL_NAME = data[group].dataBase,
            page = utils.getVk(group, 'page_token'),
            vk = utils.getVk(group);


        console.log(key);
        let link = 'https://api.vkdonate.ru/?action=donates&count=5&key=' + key;
        request(link, async function(error, response, body) {
            if (error) return console.log(error)

            let answer = JSON.parse(body); // answer
            const { donates } = answer;

            // –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –¥–æ–Ω–∞—Ç–∞:
            const uid = Number(donates[0].uid);
            const sum = Number(donates[0].sum);
            const message = donates[0].msg;
            const date = donates[0].date;

            let NewUser = await db().collection(COLL_NAME).findOne({ vk: uid });
            if (!NewUser) NewUser = await utils.regDataBase(uid, group);

            // –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–æ–Ω–∞—Ç, –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ —Ä–∞–Ω–µ–µ
            if (NewUser.lastDonate == date) return console.log(`RETURN`);

            // –ø–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è:
            let photo = await utils.getPhotoWithVkid(uid, group);

            // –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å—Ç—å:
            if (message) {
                let photoId = message.match(/(photo\d+_\d+)/i);
                if (photoId != null) {
                    photo = photoId[0].match(/(\d+_\d+)/i);
                    photo = photo[0];
                }
            }

            utils.setPhoto(photo, sum, Math.ceil(sum / 10), groups);

            let t = await user(COLL_NAME, uid);
            // —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ "–æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
            t.lastDonate = date;
            t.rub += sum;

            // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º—ã –¥–æ–Ω–∞—Ç–∞:
            if (sum <= 10) {
                // –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–∞–ª–ª–æ–≤:
                let ball = Number(sum * 30);
                t.balance += ball;

                groups.forEach(group_id => {
                    utils.sendToQueue(photo, group_id, 1, 1);
                });


                if (t.alert) await vk.api.messages.send({
                    user_id: t.vk,
                    random_id: 0,
                    message: `üíå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –¥–æ–Ω–∞—Ç üí∞\n\n üî• –í—ã–¥–∞—ë–º –í–∞–º –±–∞–ª–ª—ã üî• \n\n üëâüèª –í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á—ë—Ç –Ω–∞ ${sum} —Ä—É–±–ª–µ–π, –≤ –±–∞–ª–ª–∞—Ö —ç—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å: ${ball} üåü`,
                    keyboard: JSON.stringify({
                        inline: true,
                        buttons: [
                            [{ "action": { "type": "text", "label": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîï" }, "color": "negative" }]
                        ]
                    })
                }).catch((error) => { console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`) });
            }

            // –ø–µ—Ä–≤—ã–π –Ω–∞ —Å—Ç–µ–Ω–µ (–¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å):
            if (sum > 10 && sum <= 20) {

                // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å
                groups.forEach(group_id => {
                    utils.sendToQueue(photo, group_id, 0, 1);
                });

                if (t.alert) await vk.api.messages.send({
                    user_id: t.vk,
                    random_id: 0,
                    message: `üíå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –¥–æ–Ω–∞—Ç üí∞\n üçí –î–æ–±–∞–≤–∏–ª–∏ –≤ –æ—á–µ—Ä–µ–¥—å —Ñ–æ—Ç–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –≤ —Å–∞–º—ã–π –≤–µ—Ä—Ö, –≤–æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø–∞—Ö \n‚ôª (—Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö –µ—Å—Ç—å –≤ –±–ª–æ–∫–µ "–°—Å—ã–ª–∫–∏" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ) \n\n ü•≥ –ü–û–î–ê–†–ö–ò: \n1Ô∏è‚É£ –ú—ã –¥–æ–±–∞–≤–∏–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –≤ –°–ê–ú–´–ô –≤–≤–µ—Ä—Ö –∫–æ–º–∞–Ω–¥—ã "–û–ë–ú–ï–ù üíô" –Ω–∞ —Å—É–º–º—É –¥–æ–Ω–∞—Ç–∞, –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –±—É–¥–µ–º –ø–æ –Ω–µ–π \n2Ô∏è‚É£ –î–æ–±–∞–≤–∏–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –≤ –Ω–∞—à–∏ –°–ï–ö–†–ï–¢–ù–´–ï –≥—Ä—É–ø–ø—ã-–ø–∞—Ä—Ç–Ω—ë—Ä—ã \nüíå –°–¥–µ–ª–∞–µ–º —Ç–µ–±–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤ üçì`,
                    keyboard: JSON.stringify({
                        inline: true,
                        buttons: [
                            [{ "action": { "type": "text", "label": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîï" }, "color": "negative" }],
                            [{ "action": { "type": "text", "label": "üë§ –û—á–µ—Ä–µ–¥—å" }, "color": "positive" }],
                        ]
                    })
                }).catch((error) => { console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`) });
            }

            // –ª—Ç –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏, –æ—Ç–¥–µ–ª—å–Ω–æ, —Å –±—ã—Å—Ç—Ä–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π –ø–æ—Å—Ç–∞:
            if (sum > 20 && sum <= 30) {
                // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å
                groups.forEach(group => {
                    utils.postPublication(photo, group);
                });

                if (t.alert) await vk.api.messages.send({
                    user_id: t.vk,
                    random_id: 0,
                    message: `üíå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –¥–æ–Ω–∞—Ç üí∞\nüëâüèª –í—ã–ª–æ–∂–∏–ª–∏ –ø–æ—Å—Ç —Å —Ñ–æ—Ç–æ —É–∂–µ –Ω–∞ —Å—Ç–µ–Ω–∞—Ö –≤–æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø–∞—Ö üöÄ\n‚ôª (—Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö –µ—Å—Ç—å –≤ –±–ª–æ–∫–µ "–°—Å—ã–ª–∫–∏" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ) \n\n ü•≥ –ü–û–î–ê–†–ö–ò: \n1Ô∏è‚É£ –ú—ã –¥–æ–±–∞–≤–∏–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –≤ –°–ê–ú–´–ô –≤–≤–µ—Ä—Ö –∫–æ–º–∞–Ω–¥—ã "–û–ë–ú–ï–ù üíô" –Ω–∞ —Å—É–º–º—É –¥–æ–Ω–∞—Ç–∞, –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –±—É–¥–µ–º –ø–æ –Ω–µ–π \n2Ô∏è‚É£ –î–æ–±–∞–≤–∏–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –≤ –Ω–∞—à–∏ –°–ï–ö–†–ï–¢–ù–´–ï –≥—Ä—É–ø–ø—ã-–ø–∞—Ä—Ç–Ω—ë—Ä—ã \nüíå –°–¥–µ–ª–∞–µ–º —Ç–µ–±–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤ üçì`,
                    keyboard: JSON.stringify({
                        inline: true,
                        buttons: [
                            [{ "action": { "type": "text", "label": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîï" }, "color": "negative" }],
                        ]
                    })
                }).catch((error) => { console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`) });
            }

            if (sum > 30) {
                // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥—å
                groups.forEach(group => {
                    utils.postPublication('photo' + photo, group);
                });

                if (t.alert) await vk.api.messages.send({
                    user_id: t.vk,
                    random_id: 0,
                    message: `üíå –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –¥–æ–Ω–∞—Ç üí∞\n –ó–∞–∫—Ä–µ–ø–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ üöÄ \nüëâüèª –í—ã–ª–æ–∂–∏–ª–∏ –ø–æ—Å—Ç —Å —Ñ–æ—Ç–æ —É–∂–µ –Ω–∞ —Å—Ç–µ–Ω–∞—Ö –≤–æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø–∞—Ö üöÄ\n‚ôª (—Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö –µ—Å—Ç—å –≤ –±–ª–æ–∫–µ "–°—Å—ã–ª–∫–∏" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ) \n\n ü•≥ –ü–û–î–ê–†–ö–ò: \n1Ô∏è‚É£ –ú—ã –¥–æ–±–∞–≤–∏–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –≤ –°–ê–ú–´–ô –≤–≤–µ—Ä—Ö –∫–æ–º–∞–Ω–¥—ã "–û–ë–ú–ï–ù üíô" –Ω–∞ —Å—É–º–º—É –¥–æ–Ω–∞—Ç–∞, –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –±—É–¥–µ–º –ø–æ –Ω–µ–π \n2Ô∏è‚É£ –î–æ–±–∞–≤–∏–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –≤ –Ω–∞—à–∏ –°–ï–ö–†–ï–¢–ù–´–ï –≥—Ä—É–ø–ø—ã-–ø–∞—Ä—Ç–Ω—ë—Ä—ã \nüíå –°–¥–µ–ª–∞–µ–º —Ç–µ–±–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ª–∞–π–∫–æ–≤ üçì`,
                    keyboard: JSON.stringify({
                        inline: true,
                        buttons: [
                            [{ "action": { "type": "text", "label": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîï" }, "color": "negative" }],
                        ]
                    })
                }).catch((error) => { console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`) });
            }
        })
    }
}