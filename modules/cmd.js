const db = require('../modules/MongoConnect'),
    config = require("../config.json");
const { random } = require('../modules/utils');
/* Default module */
const utils = require("../modules/utils"); // –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –±–æ—Ç—É [–ö—Ä–∞—Å–∏–í—ã–µ –¥–µ–Ω—å–≥–∏, ID –∏–≥—Ä–æ–∫–∞ –∏ –¥—Ä.]
const functions = require('./functions.js');
const menu = {
    disable_mentions: 1,
    keyboard: JSON.stringify({
        one_time: false,
        buttons: [
            [{ "action": { "type": "text", "label": "–†—É–ª–µ—Ç–∫–∞ üé∞" }, "color": "negative" }],

            // [{ "action": { "type": "text", "label": "–í–´–ë–†–ê–¢–¨ –°–¢–ò–ö–ï–†-–ü–ê–ö üêØ" }, "color": "negative" }],

            [{ "action": { "type": "text", "label": "–û–ë–ú–ï–ù üíô" }, "color": "primary" }],
            [{ "action": { "type": "text", "label": "–õ–¢ –ë–ï–ó –û–ß–ï–†–ï–î–ò üíô" }, "color": "positive" },
                { "action": { "type": "text", "label": "–ü–û–ü–û–õ–ù–ò–¢–¨ üåü" }, "color": "positive" }
            ],
            [{ "action": { "type": "text", "label": "–•–û–ß–£ –í –õ–¢ üòç" }, "color": "negative" },
                { "action": { "type": "text", "label": "–ú–û–ò –ë–ê–õ–õ–´ üåü" }, "color": "negative" }
            ],

            [{ "action": { "type": "text", "label": "–†–µ—Ñ–µ—Ä–∞–ª üë£" }, "color": "secondary" },
                { "action": { "type": "text", "label": "–†–µ–ø–æ—Ä—Ç üÜò" }, "color": "secondary" }
            ],
        ]
    })
}

let next = {
    keyboard: JSON.stringify({
        inline: true,
        buttons: [
            [{ "action": { "type": "text", "label": "‚è≠ –°–ª–µ–¥—É—é—â–∏–π" }, "color": "positive" }]
        ]
    })
}

module.exports = {
    stickers: async function(msg, COLL_NAME, vk) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;
        let donate_keybo = {
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "–ü–û–ü–û–õ–ù–ò–¢–¨ üåü" }, "color": "positive" }]
                ]
            })
        }
        let report = {
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "üÜò –†–µ–ø–æ—Ä—Ç" }, "color": "negative" }]
                ]
            })
        }

        if (msg.user.rub < 40) return msg.send(`‚ùå –í—ã –Ω–µ –ø–æ–ø–æ–ª–Ω—è–ª–∏ —Å—á—ë—Ç –Ω–∞ 40+ —Ä—É–±–ª–µ–π \n –ë–æ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –¥–æ–Ω–∞—Ç –æ—Ç –í–∞—Å: ${msg.user.rub} —Ä—É–±.`, donate_keybo);
        if (msg.user.issued) return msg.send('‚ùå –ú—ã —É–∂–µ –¥–∞—Ä–∏–ª–∏ –í–∞–º —Å—Ç–∏–∫–µ—Ä—ã..', report);
        if (msg.user.sticker) return msg.send(`‚ùå –í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–∏–∫–µ—Ä-–ø–∞–∫ ->> ${msg.user.sticker} \n\n üîä –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–∫–∞ –µ–≥–æ –ø–æ–¥–∞—Ä—è—Ç`);

        let stickers = new Map();


        switch (msg.user.page) {
            case 1:
                stickers.set('ü§Ω‚Äç‚ôÇ', 'https://vk.com/stickers/relaxwithcatalina');
                stickers.set('üëø', 'https://vk.com/stickers/devil');
                stickers.set('üòà', 'https://vk.com/stickers/demoness');
                stickers.set('üòò', 'https://vk.com/stickers/yan');
                stickers.set('ü§Ω‚Äç‚ôÄ', 'https://vk.com/stickers/catalina');

                msg.user.page = 2;
                break;
            case 2:
                stickers.set('üê∫', 'https://vk.com/stickers/mint');
                stickers.set('üêà', 'https://vk.com/stickers/ramessesandcleo');
                stickers.set('üêØ', 'https://vk.com/stickers/murrmaid');
                stickers.set('üê∏', 'https://vk.com/stickers/hopper');
                stickers.set('üêà', 'https://vk.com/stickers/ramesses');

                msg.user.page = 3;
                break;
            case 3:
                stickers.set('üê∏', 'https://vk.com/stickers/eek');
                stickers.set('üêà', 'https://vk.com/stickers/baronsimon');
                stickers.set('üê•', 'https://vk.com/stickers/mimi');
                stickers.set('üê¶', 'https://vk.com/stickers/birbs');
                stickers.set('üôÜ', 'https://vk.com/stickers/letta');

                msg.user.page = 4;
                break;
            case 4:
                stickers.set('üê≠', 'https://vk.com/stickers/bu');
                stickers.set('üê†üê±', 'https://vk.com/stickers/mercats');
                stickers.set('ü¶ä', 'https://vk.com/stickers/roseandviolet');
                stickers.set('üêæüêà', 'https://vk.com/stickers/mewmeow');
                stickers.set('üêπ', 'https://vk.com/stickers/twig');

                msg.user.page = 5;
                break;
            case 5:
                stickers.set('ü¶äüêà', 'https://vk.com/stickers/bestsummerever');
                stickers.set('ü¶ñ', 'https://vk.com/stickers/tyrannosaurusdino');
                stickers.set('üê§', 'https://vk.com/stickers/quack');
                stickers.set('üêæ', 'https://vk.com/stickers/ru');
                stickers.set('üêø', 'https://vk.com/stickers/belkaandstrelka');


                msg.user.page = 6;
                break;
            case 6:
                stickers.set('ü•î', 'https://vk.com/stickers/ufo');
                stickers.set('üêàüêæ', 'https://vk.com/stickers/biscuit');
                stickers.set('üêπüêÅ', 'https://vk.com/stickers/hammy');
                stickers.set('üê∂', 'https://vk.com/stickers/diggy');
                stickers.set('üåç', 'https://vk.com/stickers/paradeofplanets');

                msg.user.page = 7;
                break;
            case 7:
                stickers.set('üê±üëæ', 'https://vk.com/stickers/mars');
                stickers.set('üëæ', 'https://vk.com/stickers/reptiloid');
                stickers.set('üêÆ', 'https://vk.com/stickers/vel');

                msg.user.page = 1;
                break;


            default:
                stickers.set('üëæ', 'https://vk.com/stickers/reptiloid');
                stickers.set('üê§', 'https://vk.com/stickers/quack');
                stickers.set('üêæ', 'https://vk.com/stickers/ru');
                stickers.set('üåç', 'https://vk.com/stickers/paradeofplanets');


                msg.user.page = 1;
                break;
        }

        msg.send('üëâüèª –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–∫–µ—Ä-–ø–∞–∫:');

        stickers.forEach((element, index) => {
            let keybo = {
                keyboard: JSON.stringify({
                    inline: true,
                    buttons: [
                        [{ "action": { "type": "callback", "payload": { "text": "show_snackbar", "event_id": 5, "data": element }, "label": `–í–´–ë–†–ê–¢–¨ ${index}` }, "color": "positive" }]
                    ]
                })
            }
            msg.send(element, keybo);
        });

        let next_page = {
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "‚ôª –°–õ–ï–î–£–Æ–©–ê–Ø –°–¢–†–ê–ù–ò–¶–ê" }, "color": "primary" }],
                ]
            })
        }
        return msg.send('üëáüèª', next_page)
    },
    marketPin: function(msg, donate_app) {
        let messages = [
            'üçá –ó–∞–∫—Ä–µ–ø? –û–≥–æ! –î–∞ —Ç—ã –ª—é–±–∏—à—å –ª–∞–π–∫–∏)',
            '–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º, –º—ã –µ—â—ë —Å–¥–µ–ª–∞–µ–º –¥–ª—è —Ç–µ–±—è –ø–æ–¥–∞—Ä–∫–∏!',
            '–ë–æ—Ç –°–†–ê–ó–£ –∂–µ —Å–¥–µ–ª–∞–µ—Ç –ø–æ—Å—Ç —Å —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã üåü',
            '–ê –∞–¥–º–∏–Ω—ã, –µ—Å–ª–∏ –º–µ—Å—Ç–æ —Å–≤–æ–±–æ–¥–Ω–æ, –∑–∞–∫—Ä–µ–ø—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞ üí¶',
            `–ü–ï–†–ï–•–û–î–ò üëâ ${donate_app} ‚úÖ`,
        ]

        utils.senderMessage(msg, messages);

        return true;
    },
    marketApart: function(msg, donate_app) {
        let messages = [
            'üçá –û—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç? –î–ª—è —Å–∏–ª—å–Ω—ã—Ö –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö!',
            'üëâ –ú—ã —Å–¥–µ–ª–∞–µ–º —Ç–≤–æ—ë —Ñ–æ—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º –æ—Ç –≤—Å–µ—Ö üåü',
            '–ë–æ—Ç –°–†–ê–ó–£ –∂–µ —Å–¥–µ–ª–∞–µ—Ç –ø–æ—Å—Ç —Å —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã üí¶',
            `–ü–ï–†–ï–•–û–î–ò üëâ ${donate_app} ‚úÖ`,
        ]

        utils.senderMessage(msg, messages);

        return true;
    },
    marketFirst: function(msg, donate_app) {
        let messages = [
            'üçá –ü–µ—Ä–≤—ã–π –≤ –∑–∞–ø–∏—Å–∏? –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!',
            '–í–µ–¥—å —Ç—ã –ø–æ–ª—É—á–∏—à—å –≤—Å–µ –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–∞ –ø—Ä—è–º–æ –Ω–∞ —Ñ–æ—Ç–æ! üåü',
            'üëâ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏ –≤ –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –æ–ø–ª–∞—á–∏–≤–∞–π',
            '–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–µ–±—è –¥–æ–±–∞–≤–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç üí¶',
            `–ü–ï–†–ï–•–û–î–ò üëâ ${donate_app} ‚úÖ`,
        ]

        utils.senderMessage(msg, messages);

        return true;
    },
    marketBall: function(msg, donate_app) {
        let messages = [
            'üçá –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –±–∞–ª–ª–æ–≤..',
            '–¢–æ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –∑–∞–∫–∏–Ω—É—Ç—å –æ—Ç 1 –¥–æ 15 —Ä—É–±–ª–µ–π –≤ –¥–æ–Ω–∞—Ç—ã üíô',
            '–î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–π–¥–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç—ã –∏ —Å–∫–∏–Ω—å –ø–∞—Ä—É —Ä—É–±–ª–∏–∫–æ–≤ üí¶',
            `–ü–ï–†–ï–•–û–î–ò üëâ ${donate_app} ‚úÖ`,
        ]

        utils.senderMessage(msg, messages);

        return true;
    },
    changeLikes: async function(msg, COLL_NAME, vk) {
        msg.send('–°–µ–∫—É–Ω–¥–æ—á–∫—É..');
        let smsg = ``;
        let database = await utils.getPhoto(msg, COLL_NAME, vk);
        if (database == undefined) return msg.send(`‚ùå —Å–µ–π—á–∞—Å –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –í–∞—Å, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ`);

        let keybo = {
            disable_mentions: 1,
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "‚ùå" }, "color": "negative" },
                        { "action": { "type": "text", "label": "‚úÖ" }, "color": "positive" }
                    ]
                ]
            })
        }

        smsg += `–ï—Å–ª–∏ –Ω—Ä–∞–≤–∏—Ç—Å—è - –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ—ë üíô –Ω–∞ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ ‚úÖ, —á—Ç–æ–±—ã –º—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏\n\n`
        smsg += `üëâüèª vk.com/${database}`

        msg.user.showsNow = database;

        return msg.send(`–ö–∞–∫ –í–∞–º —ç—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è? \n ${smsg}`, keybo);
    },
    ready: async function(msg, page, COLL_NAME, vk) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        let showsNow = msg.user.showsNow; // —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ–º—É —Å–µ–π—á–∞—Å
        if (showsNow == 0) return msg.send(`–ó–¥–æ—Ä–æ–≤–æ ‚úÖ`); // –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç
        let likedPhoto = msg.user.likedPhoto; // –ø–æ–ª—É—á–∞–µ–º —Å –±–∞–∑—ã –º–∞—Å—Å–∏–≤ –ª–∞–π–∫–Ω—É—Ç—ã—Ö —Ñ–æ—Ç–æ

        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ –±–∞–∑–µ –ª–∞–π–∫–Ω—É—Ç–∞ –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –µ—Å–ª–∏ –ª–∞–π–∫–Ω—É—Ç–∞ –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º —Ä–∞–±–æ—Ç—É
        if (likedPhoto.includes(showsNow)) return msg.send(`–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —ç—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üòç\n –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —ç—Ç–æ ‚úÖ`, next);

        // –¥—Ä–æ–±–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Ñ–æ—Ç–∫—É –Ω–∞ —á–∞—Å—Ç–∏ => [id–ß–µ–ª–æ–≤–µ–∫–∞, id–§–æ—Ç–æ]
        let ownerId = showsNow.match(/(\d+)/i);
        let itemId = showsNow.match(/(_\d+(\.\d)*)/i) + ``;
        itemId = itemId.match(/(\d+)/i);

        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: 
        // let [IUser] = await page.api.users.get({ user_ids: ownerId });
        // console.log(IUser)
        // if (IUser.is_closed == true) {
        //     await msg.send(`‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∞–π–∫ –Ω–µ –º–æ–∂–µ–º..`); // –ï—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∞
        //     return this.cancel(msg, page);
        // }

        // —Ñ–æ—Ç–æ –Ω–µ—Ç –≤ –±–∞–∑–µ –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–∞–π–∫:
        let exists = false; // —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∞–π–∫ –∏–ª–∏ –Ω–µ—Ç, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ω–µ—Ç
        await page.api.likes.getList({ type: 'photo', owner_id: ownerId[0], item_id: itemId[0], filter: 'likes', friends_only: 0, extended: 1, offset: 0, count: 0, skip_own: 0 })
            .then(async function(c) {
                // console.log(c);
                c.items.map(async z => {
                    if (msg.senderId == z.id) exists = true; // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –ª–∞–π–∫–Ω—É–≤—à–∏—Ö, —Ç–æ –º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "—Å—É—â–µ—Å—Ç–≤—É–µ—Ç" –Ω–∞ true
                })
            }).catch(function(e) {
                console.log(e)
                msg.send(`‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç–∞, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∞–π–∫ –Ω–µ –º–æ–∂–µ–º..`); // –ï—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∞
                exists = true;
            })

        // –µ—Å–ª–∏ –ª–∞–π–∫–∞ –Ω–µ—Ç:
        if (!exists) return msg.send(`ü§ê —á—Ç–æ-—Ç–æ —è –Ω–µ –≤–∏–∂—É –ª–∞–π–∫–∞, –ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É`);

        // —Ñ–æ—Ç–æ –ª–∞–π–∫–Ω—É—Ç–æ, –ø–æ—ç—Ç–æ–º—É –≤—ã–¥–∞—ë–º –Ω–∞–≥—Ä–∞–¥—É:
        msg.user.balance += 2;

        // –¥–æ–±–∞–≤–ª—è–µ–º –ª–∞–π–∫–Ω—É—Ç–æ–µ —Ñ–æ—Ç–æ –≤ –±–∞–∑—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:
        likedPhoto.push(showsNow)
        msg.user.likedPhoto = likedPhoto;

        // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã:
        return msg.send(`üëÄ –≤–∏–¥–∏–º –í–∞—à—É –ª—é–±–æ–≤—å üíô \n–í—ã–¥–∞—ë–º +2 –±–∞–ª–ª –í–∞–º üåü`, next);
    },
    cancel: async function(msg, COLL_NAME, vk) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        let likedPhoto = msg.user.likedPhoto; // –ø–æ–ª—É—á–∞–µ–º —Å –±–∞–∑—ã –º–∞—Å—Å–∏–≤ –ª–∞–π–∫–Ω—É—Ç—ã—Ö —Ñ–æ—Ç–æ
        let showsNow = msg.user.showsNow; // —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ–º—É —Å–µ–π—á–∞—Å
        if (showsNow == 0) return msg.send(`–ó–¥–æ—Ä–æ–≤–æ ‚úÖ`); // –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç

        // –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ –ª–∞–π–∫–Ω—É–≤—à–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å —Ñ–æ—Ç–æ –≤–Ω–æ–≤—å:
        likedPhoto.push(showsNow)
        msg.user.likedPhoto = likedPhoto;

        // –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã:
        return msg.send(`üëÄ –•–æ—Ä–æ—à–æ, –º—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –í–∞–º —ç—Ç–æ —Ñ–æ—Ç–æ`, next);
    },
    turn: async function(msg, cgroup, vk) {
        msg.send(`üëâüèª –°–º–æ—Ç—Ä–∏–º –æ—á–µ—Ä–µ–¥—å, —Å–µ–∫—É–Ω–¥—É..`);
        let user = Number(msg.senderId);
        let [IUser] = await vk.api.users.get({ user_ids: msg.senderId });

        if (IUser.is_closed == true) return msg.answer(`‚ùå –í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞! –ü—Ä–æ—Å—å–±–∞ –æ—Ç–∫—Ä—ã—Ç—å –µ—ë –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É..`); // –ï—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–∞

        let number = await utils.checkTurn(user, cgroup);
        if (number === 404) return msg.send(`–í—ã –Ω–µ –≤ –æ—á–µ—Ä–µ–¥–∏ ‚ö†\n\n üí´ –ö–æ–ø–∏—Ç–µ –±–∞–ª–ª—ã –ø—Ä–æ—è–≤–ª—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å—Ç–µ–Ω–µ –∏ –±–æ—Ç –í–∞—Å –≤–æ–∑—å–º—ë—Ç üíï`);
        return msg.send(`üì• –í—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º: <<${number}>>\n\n –°–ø–∞—Å–∏–±–æ —á—Ç–æ –í—ã —Å –Ω–∞–º–∏ ‚ú®`);
    },
    alert: async function(msg, COLL_NAME, vk) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        let keybo = {
            disable_mentions: 1,
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîî" }, "color": "positive" }],
                ]
            })
        }
        let alert = msg.user.alert;

        if (!alert) {
            keybo = {
                disable_mentions: 1,
                keyboard: JSON.stringify({
                    inline: true,
                    buttons: [
                        [{ "action": { "type": "text", "label": "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîï" }, "color": "negative" }],
                    ]
                })
            }
            msg.user.alert = true;
            return msg.send(`–í–∫–ª—é—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîî`, keybo);
        }
        msg.user.alert = false
        return msg.send(`–í—ã–∫–ª—é—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üîï`, keybo);
    },
    info: function(msg) {
        let smsg = ``;
        let keybo = {
            keyboard: JSON.stringify({
                inline: false,
                buttons: [
                    [{ "action": { "type": "text", "label": "–ù–µ—Ç üíî" }, "color": "negative" }],
                    [{ "action": { "type": "text", "label": "–î–ê üíô" }, "color": "positive" }]
                ]
            })
        }

        smsg += `–°–µ–π—á–∞—Å —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–Ω–æ–≥–æ `
        smsg += `‚ù§ –Ω–∞ –ª—é–±—É—é —Ç–≤–æ—é —Ñ–æ—Ç–∫—É \n\n`
        smsg += `–ì–æ—Ç–æ–≤(–∞)? –ü–∏—à–∏ "–î–ê"`

        return msg.send(`–ü—Ä–∏–≤–µ—Ç–∏–∫! \n${smsg}`, keybo);
    },
    yes: function(msg) {
        if (msg.isChat) return;
        let smsg = ``;
        let keybo = {
            keyboard: JSON.stringify({
                inline: false,
                buttons: [
                    [{ "action": { "type": "text", "label": "–û–¢–ö–†–´–¢–û ‚úÖ" }, "color": "positive" }]
                ]
            })
        }

        smsg += `–æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n\n`
        smsg += `‚ùó –≠—Ç–æ –û–ß–ï–ù–¨ –≤–∞–∂–Ω–æ ‚ùó \n\n`
        smsg += `–ï—Å–ª–∏ —Ç–≤–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç–∞, –∫–∞–∫ –ª—é–¥–∏ –±—É–¥—É—Ç —Å—Ç–∞–≤–∏—Ç—å —Ç–µ–±–µ ‚ù§? \n\n`
        smsg += `üëâüèª –û—Ç–∫—Ä–æ–π —Å–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–∏—à–∏ "–û–¢–ö–†–´–¢–û"\n\n`

        return msg.send(`–ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º —Ç–µ–±–µ –Ω—É–∂–Ω–æ ${smsg}`, keybo);
    },
    no: function(msg) {
        if (msg.isChat) return;

        return msg.send(`okay`, menu);
    },
    open: async function(msg, COLL_NAME, vk) {
        await msg.send(`–ü—Ä–æ–≤–µ—Ä—è—é..`);
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        let smsg = ``;
        let keybo = {
            keyboard: JSON.stringify({
                inline: false,
                buttons: [
                    [{ "action": { "type": "text", "label": "–ù–µ —Ö–æ—á—É –∫–æ–ø–∏—Ç—å –±–∞–ª–ª—ã üåö" }, "color": "negative" }],
                    [{ "action": { "type": "text", "label": "–ü–û–ù–Ø–¢–ù–û ‚û°" }, "color": "secondary" }]


                ]
            })
        }

        let [IUser] = await vk.api.users.get({ user_ids: msg.senderId });

        if (IUser.is_closed == true) smsg += `–ó–∞—á–µ–º —Ç—ã –æ–±–º–∞–Ω—ã–≤–∞–µ—à—å? –Ø –∂–µ –≤–∏–∂—É —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞! \n ‚ùó –≠–¢–û –í–ê–ñ–ù–û ‚ùó\n\n`
        if (IUser.is_closed == false) smsg += `–í–∏–∂—É —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫—Ä—ã—Ç, —Ö–æ—Ä–æ—à–æ üòä\n\n`

        smsg += `–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–∫–æ–ø–∏ ${msg.user.price} –±–∞–ª–ª–æ–≤ üåü\n\n`
        smsg += `–ë–∞–ª–ª—ã —Ç–µ–±–µ –±—É–¥—É—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\n`
        smsg += `‚úÖ –∑–∞ –ª–∞–π–∫ –ø–æ—Å—Ç–∞ +1 –±–∞–ª–ª üåü\n`
        smsg += `‚úÖ –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ª—é–±–æ–≥–æ –ø–æ—Å—Ç–∞ +1 –±–∞–ª–ª üåü\n`
        smsg += `‚úÖ –∑–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ª—é–±–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –Ω–∞ —Å—Ç–µ–Ω–µ +1 –±–∞–ª–ª üåü\n`
        smsg += `‚úÖ –∑–∞ –ª–∞–π–∫ —Ñ–æ—Ç–æ –≤ –õ–° –≥—Ä—É–ø–ø—ã +2 –±–∞–ª–ª–∞\n\n`


        return msg.send(`${smsg}`, keybo);
    },
    understandably: function(msg) {
        let smsg = ``;
        let keybo = {
            keyboard: JSON.stringify({
                inline: false,
                buttons: [
                    [{ "action": { "type": "text", "label": "–ï—â—ë –±–∞–ª–ª—ã üî•" }, "color": "positive" }],
                    [{ "action": { "type": "text", "label": "–•–û–†–û–®–û ‚û°" }, "color": "secondary" }]
                ]
            })
        }

        smsg += `‚úÖ –±–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è \n`
        smsg += `‚úÖ –±–∞–ª–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤—Å–µ–≥–¥–∞ \n`
        smsg += `‚úÖ –≤—ã–¥–∞—ë–º –±–∞–ª–ª—ã –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è \n`

        return msg.send(`–í–ê–ñ–ù–ê–Ø –ò–ù–§–ê: \n\n${smsg}`, keybo)
    },
    good: function(msg) {
        let smsg = ``;
        let keybo = {
            keyboard: JSON.stringify({
                inline: false,
                buttons: [
                    [{ "action": { "type": "text", "label": "–†–µ–ø–æ—Ä—Ç üÜò" }, "color": "negative" }],
                    [{ "action": { "type": "text", "label": "–°–ü–ê–°–ò–ë–û ü§ó" }, "color": "secondary" }]

                ]
            })
        }

        smsg += `–∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º üëÄ\n`
        smsg += `–î–ª—è —ç—Ç–æ–≥–æ –ø–∏—à–∏ "–†–ï–ü–û–†–¢" üÜò\n`
        smsg += `–ú—ã –æ—Ç–≤–µ—á–∞–µ–º –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Ç–µ–±–µ –ø–æ–º–æ—á—å ‚úÖ\n`

        return msg.send(`–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã ${smsg}`, keybo)
    },
    faq: async function(msg, COLL_NAME, vk) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        let keybo = {
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "üÜò –†–µ–ø–æ—Ä—Ç" }, "color": "negative" }]
                ]
            })
        }
        await msg.send(`–í–æ–ø—Ä–æ—Å: –£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –±–∞–ª–ª—ã , –∫–∞–∫ –ø–æ–ø–∞—Å—Ç—å –≤ –õ–¢?\n –û—Ç–≤–µ—Ç: –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –í–∞—Å –≤–æ–∑—å–º—ë—Ç –≤ –õ–¢`);
        await msg.send(`–í–æ–ø—Ä–æ—Å: –°–∫–æ–ª—å–∫–æ –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å –±–∞–ª–ª–æ–≤ —á—Ç–æ–±—ã –±–æ—Ç –º–µ–Ω—è –≤–∑—è–ª? \n –û—Ç–≤–µ—Ç: –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–±—Ä–∞—Ç—å –≤—Å–µ–≥–æ ${msg.user.price} –±–∞–ª–ª–æ–≤ \n–û—Å—Ç–∞–ª–æ—Å—å –¥–ª—è —ç—Ç–æ–≥–æ: ${msg.user.price - msg.user.balance} –±–∞–ª–ª–æ–≤`)
        await msg.send(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö –±–∞–ª–ª–æ–≤: ${msg.user.balance}`);
        return msg.send(`–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \n –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –í–∞–º –ø–æ–º–æ–∂–µ—Ç!`, keybo)
    },
    mailing: function(msg, vk, page, cgroup) {
        if (msg.senderId != 144793398 && msg.senderId != 441380068) return;
        if (!msg.params_org[0]) return msg.send(`–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: !mailing 0 [—Ç–µ–∫—Å—Ç] \n –≥–¥–µ 0 , —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–ª–æ–∂–µ–Ω–∏—è (—Ñ–æ—Ç–∫–∏, –ø–æ—Å—Ç—ã). –ï—Å–ª–∏ –∏—Ö –Ω–µ—Ç, —Ç–æ –ø—Ä–æ—Å—Ç–æ 0`);
        if (!msg.params_org[1]) return msg.send(`—É–∫–∞–∂–∏—Ç–µ —Ñ—Ä–∞–∑—É –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å!`);
        let a = msg.params_org.join(" ").split(' ');
        let text = msg.params_org.join(" ").replace(a.shift(1), "");
        let attachments = msg.params_org[0];

        vk.api.messages.getConversations({ group_id: cgroup }).then(a => {
            msg.send(`–í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: ${a.count}`);
            for (let j = 0; j < a.count; j += 200) {
                vk.api.messages.getConversations({ count: 200, group_id: cgroup, offset: j }).then(a => {
                    let array = a.items;
                    array.forEach(element => {
                        let can_write = element.conversation.can_write.allowed;
                        if (can_write) {
                            vk.api.messages.send({
                                peer_id: element.conversation.peer.id,
                                random_id: 0,
                                group_id: cgroup,
                                expire_ttl: 3600 * 24,
                                attachment: attachments,
                                message: text
                            }).catch((error) => { throw error; });
                        }
                    })
                })
            }
        })
    },
    report: async function(msg, report, COLL_NAME, vk) {
        let smsg = ``;

        smsg += `‚Äº‚Äº –°–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ üò∫ \n\n`
        smsg += `üó£ –û—Ç–≤–µ—Ç –ø–æ—Å—Ç—É–ø–∏—Ç –í–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫. –ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–µ –±–æ–ª–µ–µ 2-—Ö —á–∞—Å–æ–≤ \n\n`


        await msg.send(`üëª –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª —Ç–µ—Ö –ø–æ–º–æ—â–∏, —Å–≤—è–∑–∏ —Å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º \n\n${smsg}`);

        let t = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        t.olink = report;
    },
    answer: async function(msg, answer, COLL_NAME, vk, vkId, user) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        if (msg.user.permission < 3) return msg.send(`‚ùå –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
        let rid = msg.params_org[0];
        let id = await vkId(COLL_NAME, rid, vk),
            t = await user(COLL_NAME, id);

        if (!msg.params_org[0]) return msg.answer(`‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID —á–µ–ª–æ–≤–µ–∫–∞`);
        if (t.error) return msg.send(`‚ùå –ß–µ–ª–æ–≤–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω`);

        msg.user.olink = answer;
        msg.user.answer = t.vk;

        return msg.send(`–°–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [id${t.vk}|${t.fname}]`)
    },
    updatedb: async function(msg, COLL_NAME, vk) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;
        if (msg.user.permission < 5) return;
        await db().collection(COLL_NAME).updateMany({}, {
            $set: {
                type_roulette: 1, // —Ç–∏–ø —Ä—É–ª–µ—Ç–∫–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1- –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
            }
        });
        return msg.send(`–ó–Ω–∞—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã/–¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ‚úÖ`)
    },
    giveModer: async function(msg, vk, vkId, user, COLL_NAME) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        if (!msg.params_org[0]) return msg.send(`–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–æ–π:\n givemoder [—Å—Å—ã–ª–∫–∞] \n\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: \n givemoder https://vk.com/id0`)
        let rid = msg.params_org[0];
        let id = await vkId(COLL_NAME, rid, vk),
            t = await user(COLL_NAME, id);

        if (msg.user.permission < 10) return msg.send(`üïµ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
        if (!t) return msg.send(`üïµ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        if (t.id === msg.senderId) return;

        t.permission = 3;

        await msg.send(`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id${t.vk}|${t.fname}] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º`);

        return vk.api.messages.send({ user_id: t.vk, random_id: 0, message: `‚û° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä [id${msg.user.vk}|${msg.user.fname}] –Ω–∞–∑–Ω–∞—á–∏–ª –í–∞—Å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º` });
    },
    giveVip: async function(msg, vk, vkId, user, COLL_NAME) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        if (!msg.params_org[0]) return msg.send(`–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–æ–π:\n givevip [—Å—Å—ã–ª–∫–∞] \n\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: \n givevip https://vk.com/id0`)
        let rid = msg.params_org[0];
        let id = await vkId(COLL_NAME, rid, vk),
            t = await user(COLL_NAME, id);

        if (msg.user.permission < 10) return msg.send(`üïµ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
        if (!t) return msg.send(`üïµ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        if (t.id === msg.senderId) return;

        t.permission = 1;

        await msg.send(`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id${t.vk}|${t.fname}] VIP`);

        // return vk.api.messages.send({ user_id: t.vk, random_id: 0, message: `‚û° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä [id${msg.user.vk}|${msg.user.fname}] –Ω–∞–∑–Ω–∞—á–∏–ª –í–∞—Å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º` });
    },
    addPhoto: async function(msg, vk, vkId, user, COLL_NAME) {
        let userDB = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = userDB;

        if (!msg.params_org[0]) return msg.send(`–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–æ–π:\n –¥–æ–±–∞–≤–∏—Ç—å [—Å—Å—ã–ª–∫–∞] \n\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: \n –¥–æ–±–∞–≤–∏—Ç—å https://vk.com/id0`)
        let rid = msg.params_org[0];
        let id = await vkId(COLL_NAME, rid, vk),
            t = await user(COLL_NAME, id);

        if (msg.user.permission < 5) return msg.send(`üïµ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
        if (!t) return msg.send(`üïµ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        if (t.id === msg.senderId) return;

        const [userq] = await vk.api.users.get({ user_ids: t.vk, fields: "photo_id" });
        let avatar = userq.photo_id; // –ø–æ–ª—É—á–∏–ª–∏ —Ñ–æ—Ç–æ —Å –∞–≤–∞—Ç–∞—Ä–∫–∏
        if (!avatar) return;
        utils.setPhoto(avatar);
        return msg.send(`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ [id${t.vk}|${t.fname}] –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π`);
    },

    liketimeOutTurn: function(msg, donate_app) {
        let smsg = ``;

        smsg += `–≤—ã—Å—Ç–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Ñ–æ—Ç–æ —Å—Ä–∞–∑—É –≤ 3-—Ö –Ω–∞—à–∏—Ö –≥—Ä—É–ø–ø–∞—Ö üòª\n\n`
        smsg += `‚ö† –£—Å–ª–æ–≤–∏—è –ø–æ–∫—É–ø–∫–∏: \n`
        smsg += `üï≥ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –û–¢–ö–†–´–¢\n`
        smsg += `üï≥ –í—ã—Å—Ç–∞–≤–ª—è–µ–º –ª—é–±–æ–µ —Ñ–æ—Ç–æ (—Ç–≤–æ—ë –∏–ª–∏ –¥—Ä—É–≥–∞/–ø–æ–¥—Ä—É–≥–∏) –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã\n\n`

        smsg += `–ü–ï–†–ï–•–û–î–ò üëâ ${donate_app}\n`
        return msg.send(`–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏ –ø–æ–ø–∞—Å—Ç—å –Ω–∞ —Å—Ç–µ–Ω–∫—É, —Ç—ã –º–æ–∂–µ—à—å ${smsg}`)
    },

    noHoard: async function(msg, appId, cgroup, COLL_NAME, vk) {
        let t = await utils.dataBase(msg.senderId, COLL_NAME, vk);

        let smsg = ``;

        let keybo = await utils.getDonateKeybo(appId, cgroup);
        smsg += `—Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –∑–∞ —Ä—É–±–ª–∏ –±–∞–ª–ª—ã –∏ –Ω–∞–∫–æ–ø–∏—Ç—å ${t.price} –±–∞–ª–ª–æ–≤ –±—ã—Å—Ç—Ä–µ–µ ‚úÖ\n`
        smsg += `üìÉ –ö—É—Ä—Å —Ç–∞–∫–æ–π: 1‚ÇΩ = 3O –±–∞–ª–ª–æ–≤ \n\n`
        smsg += `–ó–∞ 1O‚ÇΩ –ø–æ–ª—É—á–∏—à—å 3OO –±–∞–ª–ª–æ–≤ —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è üåü\n\n`
        smsg += `–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëáüèª \n`;

        return msg.send(`–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ö–æ—á–µ—à—å –ª–∞–π–∫–∞—Ç—å –ª—é–¥–µ–π ${smsg}`, keybo)
    },

    balance: async function(msg, COLL_NAME, vk) {
        let t = await utils.dataBase(msg.senderId, COLL_NAME, vk);

        let smsg = ``;
        let keybo = {
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "–ù–µ —Ö–æ—á—É –∫–æ–ø–∏—Ç—å –±–∞–ª–ª—ã üåö" }, "color": "negative" }],
                    [{ "action": { "type": "text", "label": "–ï—â—ë –±–∞–ª–ª—ã üî•" }, "color": "positive" }]

                ]
            })
        }

        smsg += `${Math.floor(t.balance)} üåü\n\n`
        if (t.permission >= 1) smsg += `–¢–∞–∫–∂–µ —É —Ç–µ–±—è –µ—Å—Ç—å üíé VIP —Å—Ç–∞—Ç—É—Å üíé\n\n`
        smsg += `‚ùó –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –õ–¢ –Ω—É–∂–Ω–æ:\n\n`
        smsg += `1Ô∏è‚É£ –ù–∞–∫–æ–ø–∏—Ç—å ${t.price} –±–∞–ª–ª–æ–≤ üíö \n`
        smsg += `2Ô∏è‚É£ –û—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –í–ö–æ–Ω—Ç–∞–∫—Ç–µ üëÅ‚Äçüó® \n`
        smsg += `3Ô∏è‚É£ –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å üë§ \n`

        return msg.send(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–≤–æ–∏—Ö –±–∞–ª–ª–æ–≤: ${smsg}`, keybo);
    },
    start: function(msg) {
        if (msg.isChat) return; // –ï—Å–ª–∏ –≤ –±–µ—Å–µ–¥–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º
        let keybo = {
            keyboard: JSON.stringify({
                inline: true,
                buttons: [
                    [{ "action": { "type": "text", "label": "–î–ê–í–ê–ô üëÄ" }, "color": "positive" }]
                ]
            })
        }
        return msg.send(`–ü—Ä–∏–≤–µ—Ç üî•! \n\n –î–∞–≤–∞–π —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –±–æ—Ç–µ? üëáüèª`, keybo);
    },
    menu: function(msg) {
        if (msg.isChat) return; // –ï—Å–ª–∏ –≤ –±–µ—Å–µ–¥–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º


        return msg.send(`üíå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: `, menu);
    },
    referrals: async function(msg, cgroup, COLL_NAME, vk) {
        let t = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = t;

        let ref = `https://vk.me/public${cgroup}?ref=${msg.senderId}&ref_source=${msg.senderId}`;
        let refka = await vk.api.utils.getShortLink({ url: ref });

        await msg.send(`üë• –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –ª—é–¥–µ–π: ${msg.user.referrals}\n\n üÜï –ö–∞–∂–¥—ã–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –í–∞–º–∏ —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –í–∞–º –±–∞–ª–ª—ã –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å üÜï\n‚ùó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å ‚ùó\n\nüë£ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:`);
        return msg.send(refka.short_url);
    },
    eval: async function(msg, COLL_NAME, vk) {
        let t = await utils.dataBase(msg.senderId, COLL_NAME, vk);
        msg.user = t;


        if (msg.senderId != 144793398 && msg.senderId != 441380068) return;
        try {
            const v = eval(msg.$match[1]);
            const method = vk.api;

            if (typeof(v) === 'string') {
                const start = new Date().getTime();
                await msg.send(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${v}`);
                const end = new Date().getTime();
                return msg.send(`‚è∞ –í—Ä–µ–º—è –í—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${end - start} ms`);
            } else if (typeof(v) === 'number') {
                const start = new Date().getTime();
                await msg.send(`–ó–Ω–∞—á–µ–Ω–∏–µ: ${v}`);
                const end = new Date().getTime();
                return msg.send(`‚è∞ –í—Ä–µ–º—è –í—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${end - start} ms`);
            } else {
                const start = new Date().getTime();
                await msg.send(`Json Stringify: ${JSON.stringify(v, null, '„ÄÄ\t')}`);
                const end = new Date().getTime();
                return msg.send(`‚è∞ –í—Ä–µ–º—è –í—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${end - start} ms`);
            }
        } catch (er) {
            console.error(er);
            const start = new Date().getTime();
            await msg.send(`–û—à–∏–±–∫–∞: ${er.toString()}`);
            const end = new Date().getTime();
            return msg.send(`‚è∞ –í—Ä–µ–º—è –í—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: ${end - start} ms`);
        }
    },
    givebalance: async function(msg, COLL_NAME, vk, vkId, user) {
        let rid = msg.params_org[0];
        let id = await vkId(COLL_NAME, rid, vk),
            t = await user(COLL_NAME, id);

        if (msg.user.permission < 5) return msg.send(`üïµ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
        if (!t) return;
        if (t.id === msg.senderId) return;
        if (t.error) return msg.send(`‚ùå –ß–µ–ª–æ–≤–µ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω`);
        if (!msg.params_org[1] || !Number(msg.params_org[1])) return msg.send(`‚ùå –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ üòü \n givebalance [id/—Å—Å—ã–ª–∫–∞] [—á–∏—Å–ª–æ]`);

        t.balance += parseFloat(msg.params_org[1]);

        await msg.send(`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫—É [id${t.vk}|${t.name}] –±–∞–ª–∞–Ω—Å`);
        return vk.api.messages.send({ user_id: t.vk, random_id: 0, message: `‚û° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä [id${t.vk}|${t.fname}] –í—ã–¥–∞–ª –í–∞–º ${parseFloat(msg.params_org[1])} –±–∞–ª–ª–æ–≤ üåü\n –í–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${t.balance}üåü` });
    },
    cid: async function(msg) {
        if (!msg.isChat) return msg.send(`‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö`, { disable_mentions: 1 });
        return msg.send(`[üéâ] ¬ª ID —ç—Ç–æ–≥–æ —á–∞—Ç–∞: ${msg.chatId}`);
    }
};